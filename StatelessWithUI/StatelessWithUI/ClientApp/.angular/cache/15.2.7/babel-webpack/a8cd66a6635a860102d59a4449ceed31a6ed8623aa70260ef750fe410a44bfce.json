{"ast":null,"code":"import { CarState } from \"../Domain/CarConstants\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"../car-state-machine/car-state-machine.component\";\nfunction CounterComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"app-car-state-machine\", 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"car\", ctx_r0.car);\n  }\n}\nexport class CounterComponent {\n  get carId() {\n    return this.car ? this.car.id : this._carId;\n  }\n  set carId(value) {\n    this._carId = value;\n    if (this.car) {\n      this.car.id = value ?? '';\n    }\n  }\n  constructor(http, builder) {\n    this.http = http;\n    this.form = builder.group({\n      first: \"\"\n    });\n  }\n  getCarById() {\n    this.http.get(`https://localhost:7276/api/VehicleStateMachine/vehicle/${this.carId || \"Id2\"}`).subscribe(result => {\n      this.car = result;\n    }, error => console.error(error));\n  }\n  CreateCar() {\n    let body = {\n      id: this.carId,\n      speed: 0,\n      state: CarState.Stopped\n    };\n    this.http.post(`https://localhost:7276/api/VehicleStateMachine/vehicle`, body).subscribe(result => {\n      console.log(result);\n    }, error => console.error(error));\n  }\n}\nCounterComponent.ɵfac = function CounterComponent_Factory(t) {\n  return new (t || CounterComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.FormBuilder));\n};\nCounterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CounterComponent,\n  selectors: [[\"app-counter-component\"]],\n  decls: 14,\n  vars: 3,\n  consts: [[1, \"car-form\"], [\"aria-live\", \"polite\"], [3, \"formGroup\"], [\"name\", \"first\", \"formControlName\", \"first\", \"placeholder\", \"Id1\", 3, \"ngModel\", \"ngModelChange\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [4, \"ngIf\"], [3, \"car\"]],\n  template: function CounterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"State Machine\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\", 0)(3, \"h4\", 1);\n      i0.ɵɵtext(4, \"car state-machine\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"form\", 2)(6, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function CounterComponent_Template_input_ngModelChange_6_listener($event) {\n        return ctx.carId = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(7, \"br\");\n      i0.ɵɵelementStart(8, \"button\", 4);\n      i0.ɵɵlistener(\"click\", function CounterComponent_Template_button_click_8_listener() {\n        return ctx.getCarById();\n      });\n      i0.ɵɵtext(9, \"search\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"button\", 4);\n      i0.ɵɵlistener(\"click\", function CounterComponent_Template_button_click_10_listener() {\n        return ctx.CreateCar();\n      });\n      i0.ɵɵtext(11, \"create\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(12, \"hr\");\n      i0.ɵɵtemplate(13, CounterComponent_div_13_Template, 2, 1, \"div\", 5);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngModel\", ctx.carId);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngIf\", ctx.car && (ctx.car == null ? null : ctx.car.id));\n    }\n  },\n  dependencies: [i3.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName, i4.CarStateMachineComponent],\n  styles: [\".car-form[_ngcontent-%COMP%] {\\r\\n  display: flex;\\r\\n  flex-direction: row;\\r\\n  justify-content: space-evenly;\\r\\n  align-items: center;\\r\\n  justify-items: center;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY291bnRlci9jb3VudGVyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFhO0VBQ2IsbUJBQW1CO0VBQ25CLDZCQUE2QjtFQUM3QixtQkFBbUI7RUFDbkIscUJBQXFCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIuY2FyLWZvcm0ge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWV2ZW5seTtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIGp1c3RpZnktaXRlbXM6IGNlbnRlcjt9XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"AACA,SAAaA,QAAQ,QAAO,wBAAwB;;;;;;;;ICepDC,2BAA4B;IAC1BA,2CAA2D;IAC7DA,iBAAM;;;;IADmBA,eAAW;IAAXA,gCAAW;;;ADPpC,OAAM,MAAOC,gBAAgB;EAG3B,IAAIC,KAAK;IACP,OAAO,IAAI,CAACC,GAAG,GAAG,IAAI,CAACA,GAAG,CAACC,EAAE,GAAG,IAAI,CAACC,MAAM;EAC7C;EAEA,IAAIH,KAAK,CAACI,KAAyB;IACjC,IAAI,CAACD,MAAM,GAAGC,KAAK;IAEnB,IAAI,IAAI,CAACH,GAAG,EAAE;MACZ,IAAI,CAACA,GAAG,CAACC,EAAE,GAAGE,KAAK,IAAI,EAAE;;EAE7B;EAKAC,YAAoBC,IAAgB,EAAEC,OAAoB;IAAtC,SAAI,GAAJD,IAAI;IACtB,IAAI,CAACE,IAAI,GAAGD,OAAO,CAACE,KAAK,CAAC;MACxBC,KAAK,EAAE;KACR,CAAC;EACJ;EAEOC,UAAU;IACf,IAAI,CAACL,IAAI,CAACM,GAAG,CAAM,0DAA0D,IAAI,CAACZ,KAAK,IAAI,KAAK,EAAE,CAAC,CAACa,SAAS,CAACC,MAAM,IAAG;MACrH,IAAI,CAACb,GAAG,GAAGa,MAAM;IACnB,CAAC,EAAEC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;EACnC;EAEOE,SAAS;IACd,IAAIC,IAAI,GAAG;MAAChB,EAAE,EAAE,IAAI,CAACF,KAAK;MAAEmB,KAAK,EAAE,CAAC;MAAEC,KAAK,EAAEvB,QAAQ,CAACwB;IAAO,CAAC;IAE9D,IAAI,CAACf,IAAI,CAACgB,IAAI,CAAM,wDAAwD,EAAEJ,IAAI,CAAC,CAACL,SAAS,CAACC,MAAM,IAAG;MACrGE,OAAO,CAACO,GAAG,CAACT,MAAM,CAAC;IACrB,CAAC,EAAEC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;EACnC;;AApCWhB,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;QAAhBA,gBAAgB;EAAAyB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCV7B9B,0BAAI;MAAAA,6BAAa;MAAAA,iBAAK;MAEtBA,8BAAsB;MAEGA,iCAAiB;MAAAA,iBAAK;MAE7CA,+BAAyB;MACuCA;QAAA;MAAA,EAAmB;MAAjFA,iBAAmF;MAErFA,qBAAI;MACJA,iCAAuD;MAAvBA;QAAA,OAAS+B,gBAAY;MAAA,EAAC;MAAC/B,sBAAM;MAAAA,iBAAS;MACtEA,kCAAsD;MAAtBA;QAAA,OAAS+B,eAAW;MAAA,EAAC;MAAC/B,uBAAM;MAAAA,iBAAS;MAGvEA,sBAAI;MAEJA,mEAEM;;;MAZEA,eAAkB;MAAlBA,oCAAkB;MACwCA,eAAmB;MAAnBA,mCAAmB;MAS/EA,eAAoB;MAApBA,uEAAoB","names":["CarState","i0","CounterComponent","carId","car","id","_carId","value","constructor","http","builder","form","group","first","getCarById","get","subscribe","result","error","console","CreateCar","body","speed","state","Stopped","post","log","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Coding\\Repos\\Dotnet_Api_Advanced\\StatelessWithUI\\StatelessWithUI\\ClientApp\\src\\app\\counter\\counter.component.ts","C:\\Coding\\Repos\\Dotnet_Api_Advanced\\StatelessWithUI\\StatelessWithUI\\ClientApp\\src\\app\\counter\\counter.component.html"],"sourcesContent":["import {Component} from '@angular/core';\r\nimport {Car, CarState} from \"../Domain/CarConstants\";\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {FormBuilder, FormGroup} from \"@angular/forms\";\r\n\r\n@Component({\r\n  selector: 'app-counter-component',\r\n  templateUrl: './counter.component.html',\r\n  styleUrls: ['./counter.component.css']\r\n})\r\nexport class CounterComponent {\r\n  private _carId: string | undefined;\r\n\r\n  get carId(): string | undefined {\r\n    return this.car ? this.car.id : this._carId;\r\n  }\r\n\r\n  set carId(value: string | undefined) {\r\n    this._carId = value;\r\n\r\n    if (this.car) {\r\n      this.car.id = value ?? '';\r\n    }\r\n  }\r\n\r\n  public car?: Car;\r\n  form: FormGroup;\r\n\r\n  constructor(private http: HttpClient, builder: FormBuilder) {\r\n    this.form = builder.group({\r\n      first: \"\",\r\n    });\r\n  }\r\n\r\n  public getCarById(): void {\r\n    this.http.get<Car>(`https://localhost:7276/api/VehicleStateMachine/vehicle/${this.carId || \"Id2\"}`).subscribe(result => {\r\n      this.car = result;\r\n    }, error => console.error(error));\r\n  }\r\n\r\n  public CreateCar(): void {\r\n    let body = {id: this.carId, speed: 0, state: CarState.Stopped}\r\n\r\n    this.http.post<Car>(`https://localhost:7276/api/VehicleStateMachine/vehicle`, body).subscribe(result => {\r\n      console.log(result)\r\n    }, error => console.error(error));\r\n  }\r\n\r\n}\r\n\r\n","<h1>State Machine</h1>\r\n\r\n<div class=\"car-form\">\r\n\r\n  <h4 aria-live=\"polite\">car state-machine</h4>\r\n\r\n  <form [formGroup]=\"form\">\r\n    <input name=\"first\" formControlName=\"first\" placeholder=\"Id1\" [(ngModel)]=\"carId\"/>\r\n  </form>\r\n  <br>\r\n  <button class=\"btn btn-primary\" (click)=\"getCarById()\">search</button>\r\n  <button class=\"btn btn-primary\" (click)=\"CreateCar()\">create</button>\r\n</div>\r\n\r\n<hr>\r\n\r\n<div *ngIf=\"car && car?.id\">\r\n  <app-car-state-machine [car]=\"car\"></app-car-state-machine>\r\n</div>\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}